// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: user.sql

package generated

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (phone, first_name, last_name)
VALUES ($1, $2, $3)
`

type CreateUserParams struct {
	Phone     string `json:"phone"`
	FirstName string `json:"first_name"`
	LastName  string `json:"last_name"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser, arg.Phone, arg.FirstName, arg.LastName)
	return err
}

const getUserByPhone = `-- name: GetUserByPhone :one
SELECT id, phone, first_name, last_name FROM users
WHERE phone = $1
`

func (q *Queries) GetUserByPhone(ctx context.Context, phone string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByPhone, phone)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Phone,
		&i.FirstName,
		&i.LastName,
	)
	return i, err
}
