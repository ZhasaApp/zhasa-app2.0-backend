// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package generated

import (
	"context"
	"time"
)

type Querier interface {
	// add sale into sales by given sale_type_id, amount, date, sales_manager_id and on conflict replace
	AddSaleOrReplace(ctx context.Context, arg AddSaleOrReplaceParams) error
	CreateUser(ctx context.Context, arg CreateUserParams) error
	GetBranchById(ctx context.Context, id int32) (Branch, error)
	// Get Ranked Branches
	GetBranchesByRating(ctx context.Context, arg GetBranchesByRatingParams) ([]GetBranchesByRatingRow, error)
	// get the ranked sales managers by their total sales divided by their sales goal amount for the given period.
	GetRankedSalesManagers(ctx context.Context, arg GetRankedSalesManagersParams) ([]GetRankedSalesManagersRow, error)
	GetSaleTypeById(ctx context.Context, id int32) (SaleType, error)
	GetSalesByDate(ctx context.Context, date time.Time) ([]Sale, error)
	GetSalesManagerRankById(ctx context.Context, salesManagerID int32) (RankedSalesManager, error)
	// get the sales sums for a specific sales manager and each sale type within the given period.
	GetSalesManagerSumsByType(ctx context.Context, arg GetSalesManagerSumsByTypeParams) ([]GetSalesManagerSumsByTypeRow, error)
	GetSalesTypes(ctx context.Context) ([]SaleType, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	UpdatePassword(ctx context.Context, arg UpdatePasswordParams) error
}

var _ Querier = (*Queries)(nil)
