// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: brands.sql

package generated

import (
	"context"
)

const getBranchBrands = `-- name: GetBranchBrands :many
SELECT b.id, b.title
FROM branch_brands bb
         JOIN brands b ON bb.brand_id = b.id
WHERE bb.branch_id = $1
`

type GetBranchBrandsRow struct {
	ID    int32  `json:"id"`
	Title string `json:"title"`
}

func (q *Queries) GetBranchBrands(ctx context.Context, branchID int32) ([]GetBranchBrandsRow, error) {
	rows, err := q.db.QueryContext(ctx, getBranchBrands, branchID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetBranchBrandsRow
	for rows.Next() {
		var i GetBranchBrandsRow
		if err := rows.Scan(&i.ID, &i.Title); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
