// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package generated

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type ValueType string

const (
	ValueTypeAmount ValueType = "amount"
	ValueTypeCount  ValueType = "count"
)

func (e *ValueType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ValueType(s)
	case string:
		*e = ValueType(s)
	default:
		return fmt.Errorf("unsupported scan type for ValueType: %T", src)
	}
	return nil
}

type NullValueType struct {
	ValueType ValueType
	Valid     bool // Valid is true if ValueType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullValueType) Scan(value interface{}) error {
	if value == nil {
		ns.ValueType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ValueType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullValueType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ValueType), nil
}

type Branch struct {
	ID          int32     `json:"id"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	BranchKey   string    `json:"branch_key"`
	CreatedAt   time.Time `json:"created_at"`
}

type BranchBrand struct {
	BranchID int32 `json:"branch_id"`
	BrandID  int32 `json:"brand_id"`
}

type BranchDirector struct {
	ID       int32 `json:"id"`
	UserID   int32 `json:"user_id"`
	BranchID int32 `json:"branch_id"`
}

type BranchDirectorsView struct {
	UserID           int32  `json:"user_id"`
	Phone            string `json:"phone"`
	FirstName        string `json:"first_name"`
	LastName         string `json:"last_name"`
	AvatarUrl        string `json:"avatar_url"`
	BranchDirectorID int32  `json:"branch_director_id"`
	BranchID         int32  `json:"branch_id"`
	BranchTitle      string `json:"branch_title"`
}

type BranchGoalsByType struct {
	ID       int32     `json:"id"`
	FromDate time.Time `json:"from_date"`
	ToDate   time.Time `json:"to_date"`
	Amount   int64     `json:"amount"`
	BranchID int32     `json:"branch_id"`
	TypeID   int32     `json:"type_id"`
}

type BranchesGoalsRatioByPeriod struct {
	FromDate time.Time `json:"from_date"`
	ToDate   time.Time `json:"to_date"`
	Ratio    float64   `json:"ratio"`
	BranchID int32     `json:"branch_id"`
}

type Brand struct {
	ID          int32     `json:"id"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	CreatedAt   time.Time `json:"created_at"`
}

type Comment struct {
	ID        int32     `json:"id"`
	Body      string    `json:"body"`
	UserID    int32     `json:"user_id"`
	PostID    int32     `json:"post_id"`
	CreatedAt time.Time `json:"created_at"`
}

type Like struct {
	UserID int32 `json:"user_id"`
	PostID int32 `json:"post_id"`
}

type Owner struct {
	ID     int32 `json:"id"`
	UserID int32 `json:"user_id"`
}

type OwnersView struct {
	UserID    int32  `json:"user_id"`
	Phone     string `json:"phone"`
	FirstName string `json:"first_name"`
	LastName  string `json:"last_name"`
	AvatarUrl string `json:"avatar_url"`
	OwnerID   int32  `json:"owner_id"`
}

type Post struct {
	ID        int32     `json:"id"`
	Title     string    `json:"title"`
	Body      string    `json:"body"`
	UserID    int32     `json:"user_id"`
	CreatedAt time.Time `json:"created_at"`
}

type PostImage struct {
	ID       int32  `json:"id"`
	ImageUrl string `json:"image_url"`
	PostID   int32  `json:"post_id"`
}

type Sale struct {
	ID             int32     `json:"id"`
	SalesManagerID int32     `json:"sales_manager_id"`
	SaleDate       time.Time `json:"sale_date"`
	Amount         int64     `json:"amount"`
	SaleTypeID     int32     `json:"sale_type_id"`
	Description    string    `json:"description"`
	CreatedAt      time.Time `json:"created_at"`
}

type SaleType struct {
	ID          int32     `json:"id"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	CreatedAt   time.Time `json:"created_at"`
	Color       string    `json:"color"`
	Gravity     int32     `json:"gravity"`
	ValueType   ValueType `json:"value_type"`
}

type SalesBrand struct {
	SaleID  int32 `json:"sale_id"`
	BrandID int32 `json:"brand_id"`
}

type SalesManager struct {
	ID        int32         `json:"id"`
	UserID    int32         `json:"user_id"`
	BranchID  int32         `json:"branch_id"`
	CreatedAt time.Time     `json:"created_at"`
	BrandID   sql.NullInt32 `json:"brand_id"`
}

type SalesManagerGoalsByType struct {
	ID             int32     `json:"id"`
	FromDate       time.Time `json:"from_date"`
	ToDate         time.Time `json:"to_date"`
	Amount         int64     `json:"amount"`
	SalesManagerID int32     `json:"sales_manager_id"`
	TypeID         int32     `json:"type_id"`
}

type SalesManagerGoalsRatioByPeriod struct {
	FromDate       time.Time `json:"from_date"`
	ToDate         time.Time `json:"to_date"`
	Ratio          float64   `json:"ratio"`
	SalesManagerID int32     `json:"sales_manager_id"`
}

type SalesManagersView struct {
	UserID         int32  `json:"user_id"`
	Phone          string `json:"phone"`
	FirstName      string `json:"first_name"`
	LastName       string `json:"last_name"`
	AvatarUrl      string `json:"avatar_url"`
	SalesManagerID int32  `json:"sales_manager_id"`
	BranchID       int32  `json:"branch_id"`
	BranchTitle    string `json:"branch_title"`
}

type User struct {
	ID        int32     `json:"id"`
	Phone     string    `json:"phone"`
	FirstName string    `json:"first_name"`
	LastName  string    `json:"last_name"`
	CreatedAt time.Time `json:"created_at"`
}

type UserAvatarView struct {
	ID        int32  `json:"id"`
	Phone     string `json:"phone"`
	FirstName string `json:"first_name"`
	LastName  string `json:"last_name"`
	AvatarUrl string `json:"avatar_url"`
}

type UsersAvatar struct {
	UserID    int32  `json:"user_id"`
	AvatarUrl string `json:"avatar_url"`
}

type UsersCode struct {
	ID        int32     `json:"id"`
	UserID    int32     `json:"user_id"`
	Code      int32     `json:"code"`
	CreatedAt time.Time `json:"created_at"`
}
